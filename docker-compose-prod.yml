version: '3.7'
# extends, so run with `docker compose -f docker-compose.yml -f docker-compose-prod.yml
services:
  nginx:
    volumes: 
      - ./nginx/prod_conf.d_templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro,Z
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "443:443"
      - "80:80"
    environment:
      NGINX_ENVSUBST_TEMPLATE_DIR: /etc/nginx/templates
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
      METRICS_HOSTNAME: ${METRICS_HOSTNAME}
      CADDY_SUBDOMAIN: ${CADDY_SUBDOMAIN:-caddy}
      ES_SUBDOMAIN: ${ES_SUBDOMAIN:-es}
      KIBANA_SUBDOMAIN: ${KIBANA_SUBDOMAIN:-kibana}
      LOGSTASH_SUBDOMAIN: ${LOGSTASH_SUBDOMAIN:-logstash}
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    depends_on:
      - nginx
    user: root
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    # TODO: we should use a certbot DNS plugin to configure wildcard cert if possible
    command: >
      certonly --webroot -w /var/www/certbot --force-renewal
      --email ${CONTACT_EMAIL:-hello@me.com} --no-eff-email 
      -d ${METRICS_HOSTNAME}
      -d ${CADDY_SUBDOMAIN}.${METRICS_HOSTNAME}
      -d ${ES_SUBDOMAIN}.${METRICS_HOSTNAME}
      -d ${KIBANA_SUBDOMAIN}.${METRICS_HOSTNAME}
      -d ${LOGSTASH_SUBDOMAIN}.${METRICS_HOSTNAME}
      --agree-tos
